% \iffalse meta-comment
%
% File: codeanatomy.dtx Copyright (C) 2019 Hong-Phuc Bui
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file
%
%    https://www.latex-project.org/lppl.txt
%
%
% -----------------------------------------------------------------------
%
% The development version of the bundle can be found at
%
%    https://github.com/(TODO)
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
% \fi
%
% \iffalse
%<package>\NeedsTeXFormat{LaTeX2e}[2018/12/01]
%<package>\ProvidesPackage{codeanatomy}[2019/07/07 v0.1-Alpha draw Code Anatomy]
% \fi
%
% \iffalse
%<*driver>
\documentclass{l3doc}
\usepackage{fontspec}
\usepackage{biblatex}
\addbibresource{literatur.bib}
\newcommand{\slsh}{\textbackslash{}}
\usepackage{codeanatomy}

\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.sty}
% \DoNotIndex{}
%
% \title{^^A
%   \pkg{codeanatomy} -- Draw Code Anatomy^^A
%   \thanks{This file describes \fileversion,
%     last revised \filedate.}^^A
% }
%
% \author{^^A
%  Hồng-Phúc Bùi^^A
%  \thanks{^^A
%    E-mail:
%    \href{mailto:Hồng-Phúc Bùi}
%      {hong-phuc.bui at htwsaar dot de}^^A
%   }^^A
% }
%
% \date{Released \filedate}
% \AtEndDocument{^^A
%  \printbibliography^^A
% }
%
% \maketitle
% \tableofcontents
%
% \begin{documentation}
% \section{Introduction}
% The idea of this Package is to typse the illustrations of a piece of code with 
% annotations on each parts of the piece of code (Code Anatomy). The idea of presenting
% piece of (runable) concrete code as a anatomy is not from me. 
% This idea is based on the texbook~\autocite{sedgewick_wayne_2016}.
% 
%
% \section{Tutorial} 
% In this tutorial we will draw an anatomy of a function like the 
% figure~\ref{fig:tut1-function}.
%
% \begin{figure} 
% \begin{tikzpicture}[remember picture]
% \codeBlock{^^A
% \codePart{functionHead}{function \codePart{functionName}{gcd}\codePart{parameterList}{(p, q)}}\{ \\[2.5pt] %
% \ptab{}\tikzmarknode[most top]{mostLeft}{}if (q === 0) \{\\
% \ptab\ptab{}return p; \\
% \ptab{}\} else \{\\
% \ptab\ptab{}return gcd(p, p \% q);\tikzmarknode{mostRight}{}\\
% \ptab{}\}\tikzmarknode[most bottom]{mostBottom}{}\\
% \}
% };
%
% \node(functionBody)[draw,code part,fit=(mostLeft) (mostRight) (mostBottom)] {};
%
% Anotation labels
% \codeAnnotation{functionHeadText}(-1,3)  {Function\\Head}
% \codeAnnotation{functionBodyText}(-1,1.5){Function\\Body}
% \codeAnnotation{functionNameText}(1,4)   {Function Name}
% \codeAnnotation{parameterListText} (4,4) {Paramter List}
%
% Annotation labels to Code
% \draw[->, annotation] (functionBodyText) -- (functionBody);
% \draw[->, annotation] (functionHeadText) -- (functionHead);
% \draw[->, annotation] (functionNameText) -- (functionName);
% \draw[->, annotation] (parameterListText) -- (parameterList);
% \end{tikzpicture}
%
% \caption{Anatomy of a function\label{fig:tut1-function}}
% \end{figure}
% 
% To use this package, just insert |\usepackage{codeanatomy}| in your \LaTeX{} file.
% Next step is to create a |tikzpicture| environment.
% 
% \begin{tikzpicture}[remember picture]
% \codeBlock{
% \textbackslash{}begin\{tikzpicture\}[\codePart{option}{remember picture}]\\
% \codePart{debugGrid}{\{[on background layer]\textbackslash{}draw[code grid debug] (-0.5,-0.5) grid (6.5,4.5);\}}\\
% \% ... \\
% \textbackslash{}end\{tikzpicture\}
% }
%
% ^^A Annotation labels
% \codeAnnotation{optionText}    (5,2.5) {necsessary for\\later mark}
% \codeAnnotation{debugGridText} (7,0)   {plot a thin grey grid on background\\usefull to determinate coordinate of annotation}
%
% ^^A Annotation labels to code
% \draw[->, annotation] (optionText) -- (option);
% \draw[->, annotation] (debugGridText) -- (debugGrid);
% \end{tikzpicture}
%
% As next step we need to put the piece of code in the |tikzpicture| environment using 
% the command |\codeBlock|.
%

% \begin{tikzpicture}[remember picture]
% \codeBlock{
% \textbackslash{}begin\{tikzpicture\}[remember picture]\\
% \{[on background layer]\textbackslash{}draw[code grid debug] (-0.5,-0.5) grid (6.5,4.5);\}\\
% \textbackslash{}codeBlock\{\% \\
% function gcd(p, q) \{ \\
% \ptab{}if (q === 0) \{ \\
% \ptab\ptab{}return p; \\
% \ptab{}\} else \{ \\
% \ptab\ptab{}return gcd(p, p\%q); \\
% \ptab\} \\
% \} \\
% \} \\
% \textbackslash{}end\{tikzpicture\}
% }
% \end{tikzpicture}
% 
% The result of the above code is shown in the figure~\ref{fig:function-compressed},
% which is not what we really want.
%
% \begin{figure}
% \begin{tikzpicture}[remember picture]
% {[on background layer]\draw[code grid debug] (-0.5,-0.5) grid (6.5,4.5);}
% \codeBlock{
% function gcd(p, q) {
%     if (q === 0) {
%         return p;
%     } else {
%         return gcd(p, p\%q);
%     }
% }
% }
% \end{tikzpicture}
% \caption{Unformated Code\label{fig:function-compressed}}  
% \end{figure}
%
% We need to put |\ptab| and |\\| into code to keep whitespaces and newline.
%
% \begin{tikzpicture}[remember picture]
% \codeBlock{
% \textbackslash{}begin\{tikzpicture\}[remember picture]\\
% \{[on background layer]\textbackslash{}draw[code grid debug] (-0.5,-0.5) grid (6.5,4.5);\}\\
% \textbackslash{}codeBlock\{\slsh\slsh \%\\
% function gcd(p, q) \{ \\
% \ptab{}if (q === 0) \{ \\
% \ptab\ptab{}return p; \\
% \ptab{}\} else \{ \\
% \ptab\ptab{}return gcd(p, p\%q); \\
% \ptab\} \\
% \} \\
% \} \\
% \textbackslash{}end\{tikzpicture\}
% }
% \end{tikzpicture}
%
%
% \end{documentation}
% 
% \begin{implementation}
%  
% \section{Implementation}
%
%
%
% \subsection{Package Dependenies}
%    \begin{macrocode}
\RequirePackage{expl3}
\RequirePackage{xparse}
\RequirePackage[rgb]{xcolor}
\RequirePackage{tikz}
%    \end{macrocode}
%
% \subsection{Setup styles}
% \begin{macro}{annotation}
% \begin{macro}{bgcmdcolor}
% Define colors which are used in Code Anatomy.
% 
%    \begin{macrocode}
\definecolor{annotation}{rgb}{0,0.50002,1} % Blue
\colorlet{bgcmdcolor}{gray}                % Grey
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\usetikzlibrary}
% Load necsessary Tikz Libraries.
%    \begin{macrocode}
\usetikzlibrary{
   tikzmark  
  ,fit
  ,arrows.meta
  ,bending
  ,shapes
  ,chains
  ,backgrounds
  ,scopes
  ,decorations
  ,decorations.pathmorphing
}
%    \end{macrocode}
% \end{macro}
%
% Tikz style for code in a Code Anatomy
%    \begin{macrocode}
\tikzset{anatomy/.style={%
      anchor=south west,%
      inner sep=0,%
      align=left,%
      font=\ttfamily
    }
}
\tikzset{code part/.style={%
      rectangle,%
      draw=annotation,%
      align=left,%
      minimum height=1.125em,%
      inner sep=1.125pt,%
      outer sep=0pt,%
      font=\ttfamily
    }
}
%    \end{macrocode}
%
%    \begin{macrocode}
\tikzset{annotation/.style={%
      preaction={
          draw=white,%
          line width=3.5pt,%
          arrows={-Triangle Cap[]},%
      },%
      draw=annotation,%
      arrows={-Latex[%
          round,%
          color=annotation]
      }
    }
}
\tikzset{code annotation/.style={%
      inner sep=2pt,%
      text=annotation,%
      align=center,%
      font=\sffamily\footnotesize
    }
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\tikzset{code grid/.style={%
      step=1.0,%
      draw=none,%
      very thin,%
      on background layer
    }
}
\tikzset{code grid debug/.style={%
      step=1.0,%
      draw=gray!20,%
      very thin,%
      on background layer
    }
}
%    \end{macrocode}
%    \begin{macrocode}
\tikzset{most top/.style={%
    minimum height=1.25em
  }
}
\tikzset{most bottom/.style={%
    minimum height=1.125em
  }
}
%    \end{macrocode}
%
% 
% \subsection{Command used to set code and code anatomy}
%
% \begin{macro}{\codeBlock}
% All code block is of a anatomy picture is typeset using this command.
%    \begin{macrocode}
\NewDocumentCommand{\codeBlock}{m}%
{\node(code) [anatomy] at (0,0) {#1};}
%    \end{macrocode}
% \end{macro} 
% 
% \begin{macro}{\codePart}
% Assign a piece of typeset code --typical in one line-- to a Tikz Node, so that it can
% be annotated.
% \begin{itemize}
%   \item Parameter 1: Tikz Node Name, is used to reference
%   \item Parameter 2: Code Picece to be typeset
% \end{itemize}
%    \begin{macrocode}
\NewDocumentCommand{\codePart}{mm} %
{
  {\tikzmarknode[code part]{#1}{#2}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\bgcode}
% Piece of code which are not emphrased typeset
%    \begin{macrocode}
\NewDocumentCommand{\bgcode}{m}{\textcolor{bgcmdcolor}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ptab}
% Produce a white space of 4 small characters |h|
%    \begin{macrocode}
\NewDocumentCommand{\ptab}{}{\phantom{hhhh}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\phspace}
% Produce a white space of 1 small character |h|
%    \begin{macrocode}
\NewDocumentCommand{\phspace}{}{\phantom{h}}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\codeAnnotation}
% Typeset Annotation for a code Part 
% \begin{itemize}
%   \item Parameter 1 Tikz Node Name of the Annotation
%   \item Parameter 2 Coordinate of the Annotation
%   \item Parameter 3 The Annotation Content
% \end{itemize}
%    \begin{macrocode}
\NewDocumentCommand{\codeAnnotation}{m r() m } %
{
  \node(#1)[code annotation] at (#2) {#3} ;
}
%    \end{macrocode}
% \end{macro}
%
% \end{implementation}
%
%

